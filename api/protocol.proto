syntax = "proto3";

package message;

option go_package = "./protocol;protocol";

enum MsgType {
  UNKNOWN = 0;
  CONNECT = 1;
  CONNECT_ACK = 2;
  SEND = 3;             // 发送消息 (c2s)
  SEND_ACK = 4;         // 发送消息 ack (s2c)
  RECEIVE = 5;          // 接收消息 (s2c)
  RECEIVE_ACK = 6;      // 接收消息 ack (c2s)
  PING = 7;
  PONG = 8;
  DISCONNECT = 9;
}

message Message {
  MsgType msgType = 1;

  oneof payload {
    ConnectPacket connectPacket = 2;
    ConnectAckPacket connectAckPacket = 3;
    PingPacket pingPacket = 4;
    PongPacket pongPacket = 5;
    SendPacket sendPacket = 6;
    SendAckPacket sendAckPacket = 7;
    ReceivePacket receivePacket = 8;
    ReceiveAckPacket receiveAckPacket = 9;
  }
}

message ConnectPacket {
  string uid = 1;
  string token = 2;
  string did = 3;
}

message ConnectAckPacket {
  int32 code = 1;
}

message PingPacket {
}

message PongPacket {
}

message SendPacket {
  string conversationType = 1;
  string toID = 2;
  Payload payload = 3;
}

message Payload {
  string msgNo = 1;
  string msgId = 2;
  uint64 msgSeq = 3;
  int32 msgType = 4;
  string content = 5;
  uint64 sendTime = 6;
}

message SendAckPacket {
  int32 code = 1;
  string msgNo = 2;
  string msgId = 3;
  uint64 msgSeq = 4;
  string conversationID = 5;
}

message ReceivePacket {
  string conversationType = 1;
  string conversationID = 2;
  string fromID = 3;
  Payload payload = 4;
}

message ReceiveAckPacket {
  int32 code = 1;
  string msgId = 2;
  uint64 msgSeq = 3;
}